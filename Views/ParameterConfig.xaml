<?xml version="1.0" encoding="utf-8" ?>
<ContentPage
    x:Class="NextChatGPTForMAUI.Views.ParameterConfig"
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:viewmodel="clr-namespace:NextChatGPTForMAUI.Viewmodels"
    x:Name="ConfigParameter"
    Title="参数控制"
    x:DataType="viewmodel:ParameterConfigViewModel"
    BackgroundColor="{AppThemeBinding Light={StaticResource ParaMainLightBackground},
                                      Dark={StaticResource ParaMainDarkBackground}}">
    <ContentPage.Resources>
        <ResourceDictionary>
            <Style TargetType="Label">
                <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource TextLightColor}, Dark={StaticResource TextDarkColor}}" />
            </Style>
            <Style TargetType="Entry">
                <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource ParaEntryLightBackground}, Dark={StaticResource ParaEntryDarkBackground}}" />
                <Setter Property="TextColor" Value="Black" />
                <Setter Property="PlaceholderColor" Value="{StaticResource TextLightColor}" />
            </Style>
        </ResourceDictionary>
    </ContentPage.Resources>
    <ScrollView>
        <StackLayout>
            <HorizontalStackLayout Margin="0,20,0,10" HorizontalOptions="CenterAndExpand">
                <Label
                    HorizontalOptions="CenterAndExpand"
                    Text="API详细信息请参阅"
                    VerticalOptions="Center" />
                <Label
                    HorizontalOptions="CenterAndExpand"
                    Text="OpenAI"
                    TextColor="#318ce7"
                    VerticalOptions="Center">
                    <Label.GestureRecognizers>
                        <TapGestureRecognizer Command="{Binding OpenUrlCommand}" CommandParameter="https://platform.openai.com/docs/api-reference/chat/create" />
                    </Label.GestureRecognizers>
                </Label>
                <Button
                    Margin="60,0,0,0"
                    Background="Green"
                    Command="{Binding SaveCommand}"
                    HorizontalOptions="End"
                    Text="保存"
                    TextColor="White"
                    WidthRequest="100" />
            </HorizontalStackLayout>

            <Grid Padding="10" WidthRequest="{Binding Source={x:Reference ConfigParameter}, Path=WidthRequest}">
                <VerticalStackLayout>
                    <Grid
                        x:Name="LayoutOne"
                        HeightRequest="50"
                        WidthRequest="{Binding Source={x:Reference ConfigParameter}, Path=WidthRequest}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="120" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <VerticalStackLayout Grid.Column="0">
                            <Label Text="model" />
                            <Border
                                BackgroundColor="#dcdcdc"
                                HorizontalOptions="Start"
                                StrokeThickness="0"
                                WidthRequest="100">
                                <Border.StrokeShape>
                                    <RoundRectangle CornerRadius="5" />
                                </Border.StrokeShape>
                                <Border BackgroundColor="#dcdcdc" StrokeThickness="1">
                                    <Border.StrokeShape>
                                        <RoundRectangle CornerRadius="5" />
                                    </Border.StrokeShape>
                                    <Entry
                                        HorizontalTextAlignment="Center"
                                        Text="{Binding ParameterModel.Model}"
                                        WidthRequest="100" />
                                </Border>
                            </Border>
                        </VerticalStackLayout>
                        <Label
                            Grid.Column="1"
                            Margin="10,0,0,0"
                            Text="【模型】指定要使用的模型的名称。不同的模型有不同的参数量、性能和价格"
                            VerticalOptions="Start" />
                    </Grid>
                    <Grid
                        x:Name="LayoutTwo"
                        Margin="0,20,0,10"
                        HeightRequest="80"
                        WidthRequest="{Binding Source={x:Reference ConfigParameter}, Path=WidthRequest}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="120" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <VerticalStackLayout Grid.Column="0">
                            <Label Text="temperature" />
                            <Border
                                BackgroundColor="#dcdcdc"
                                HorizontalOptions="Start"
                                StrokeThickness="0"
                                WidthRequest="100">
                                <Border.StrokeShape>
                                    <RoundRectangle CornerRadius="5" />
                                </Border.StrokeShape>
                                <Entry
                                    HorizontalTextAlignment="Center"
                                    Keyboard="Numeric"
                                    Placeholder="0-1"
                                    Text="{Binding ParameterModel.Temperature}"
                                    WidthRequest="100" />
                            </Border>
                        </VerticalStackLayout>
                        <Label
                            Grid.Column="1"
                            Margin="10,0,0,0"
                            Text="【温度】控制模型生成文本的随机性。值越高，模型越倾向于生成不确定的、新颖的、多样的文本，越低则倾向于生成确定的、常见的、单一的文本"
                            VerticalOptions="Start" />
                    </Grid>
                    <Grid
                        x:Name="LayoutThree"
                        Margin="0,0,0,10"
                        HeightRequest="80"
                        WidthRequest="{Binding Source={x:Reference ConfigParameter}, Path=WidthRequest}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="120" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <VerticalStackLayout Grid.Column="0">
                            <Label Text="top_p" />
                            <Border
                                BackgroundColor="#dcdcdc"
                                HorizontalOptions="Start"
                                StrokeThickness="0"
                                WidthRequest="100">
                                <Border.StrokeShape>
                                    <RoundRectangle CornerRadius="5" />
                                </Border.StrokeShape>
                                <Entry
                                    HorizontalTextAlignment="Center"
                                    Keyboard="Numeric"
                                    Placeholder="0-1"
                                    Text="{Binding ParameterModel.Top_p}"
                                    WidthRequest="100" />
                            </Border>
                        </VerticalStackLayout>
                        <Label
                            Grid.Column="1"
                            Margin="10,0,0,0"
                            Text="【截断概率】控制模型在生成下一个单词时考虑的候选单词集合的大小。值越高，模型考虑的候选单词越多，生成文本的多样性越高，反之考虑的候选单词越少，生成文本的多样性越低"
                            VerticalOptions="Start" />
                    </Grid>
                    <Grid
                        x:Name="LayoutFour"
                        Margin="0,0,0,10"
                        HeightRequest="80"
                        WidthRequest="{Binding Source={x:Reference ConfigParameter}, Path=WidthRequest}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="120" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <VerticalStackLayout Grid.Column="0">
                            <Label Text="frequency_penalty" />
                            <Border
                                BackgroundColor="#dcdcdc"
                                HorizontalOptions="Start"
                                StrokeThickness="0"
                                WidthRequest="100">
                                <Border.StrokeShape>
                                    <RoundRectangle CornerRadius="5" />
                                </Border.StrokeShape>
                                <Entry
                                    HorizontalTextAlignment="Center"
                                    Keyboard="Numeric"
                                    Placeholder="-2.0-2.0"
                                    Text="{Binding ParameterModel.Frequency_penalty}"
                                    WidthRequest="100" />
                            </Border>
                        </VerticalStackLayout>
                        <Label
                            Grid.Column="1"
                            Margin="10,0,0,0"
                            Text="【频率惩罚】控制模型在生成文本时避免重复单词或短语的程度。值越高，模型越倾向于生成不重复的文本，反之越倾向于生成重复的文本。"
                            VerticalOptions="Start" />
                    </Grid>
                    <Grid
                        x:Name="LayoutFive"
                        Margin="0,0,0,10"
                        HeightRequest="80"
                        WidthRequest="{Binding Source={x:Reference ConfigParameter}, Path=WidthRequest}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="120" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <VerticalStackLayout Grid.Column="0">
                            <Label Text="presence_penalty" />
                            <Border
                                BackgroundColor="#dcdcdc"
                                HorizontalOptions="Start"
                                StrokeThickness="0"
                                WidthRequest="100">
                                <Border.StrokeShape>
                                    <RoundRectangle CornerRadius="5" />
                                </Border.StrokeShape>
                                <Entry
                                    HorizontalTextAlignment="Center"
                                    Keyboard="Numeric"
                                    Placeholder="-2.0-2.0"
                                    Text="{Binding ParameterModel.Presence_penalty}"
                                    WidthRequest="100" />
                            </Border>
                        </VerticalStackLayout>
                        <Label
                            Grid.Column="1"
                            Margin="10,0,0,0"
                            Text="【存在惩罚】控制模型在生成文本时避免使用已经出现过的单词或短语的程度。值越高，模型越倾向于生成不重复的文本，反之模型越倾向于生成重复的文本"
                            VerticalOptions="Start" />
                    </Grid>
                    <Grid
                        x:Name="LayoutSix"
                        HeightRequest="60"
                        WidthRequest="{Binding Source={x:Reference ConfigParameter}, Path=WidthRequest}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="120" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <VerticalStackLayout Grid.Column="0">
                            <Label Text="max_tokens" />
                            <Border
                                BackgroundColor="#dcdcdc"
                                HorizontalOptions="Start"
                                StrokeThickness="0"
                                WidthRequest="100">
                                <Border.StrokeShape>
                                    <RoundRectangle CornerRadius="5" />
                                </Border.StrokeShape>
                                <Entry
                                    HorizontalTextAlignment="Center"
                                    Keyboard="Numeric"
                                    Text="{Binding ParameterModel.Max_tokens}"
                                    WidthRequest="100" />
                            </Border>
                        </VerticalStackLayout>
                        <Label
                            Grid.Column="1"
                            Margin="10,0,0,0"
                            Text="【最大令牌数】指定模型生成文本的最大令牌数。 max_tokens越大，模型生成的文本越长，反之生成的文本越短"
                            VerticalOptions="Start" />
                    </Grid>
                    <Label
                        Margin="0,40,0,10"
                        HorizontalOptions="Center"
                        Text="接口地址" />
                    <Border
                        BackgroundColor="#dcdcdc"
                        HorizontalOptions="Center"
                        StrokeThickness="0"
                        WidthRequest="320">
                        <Border.StrokeShape>
                            <RoundRectangle CornerRadius="5" />
                        </Border.StrokeShape>
                        <Entry
                            HorizontalTextAlignment="Center"
                            Placeholder="示例： https://api.openai.com/v1"
                            Text="{Binding ParameterModel.Api_address}"
                            WidthRequest="400" />
                    </Border>
                    <Label
                        Margin="0,20,0,10"
                        HorizontalOptions="Center"
                        Text="API_Key" />
                    <Border
                        Margin="0,0,0,20"
                        BackgroundColor="#dcdcdc"
                        HorizontalOptions="Center"
                        StrokeThickness="0"
                        WidthRequest="320">
                        <Border.StrokeShape>
                            <RoundRectangle CornerRadius="5" />
                        </Border.StrokeShape>
                        <Entry
                            HorizontalTextAlignment="Center"
                            Text="{Binding ParameterModel.Apikey}"
                            WidthRequest="400" />
                    </Border>
                </VerticalStackLayout>
            </Grid>
        </StackLayout>
    </ScrollView>
</ContentPage>